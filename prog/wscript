from os.path import join, basename
from glob import glob
import sys, os

import Utils
from Configure import conf

APPNAME='analyse'
blddir = 'build'

def get_version():
    return os.pexec('git show --pretty=%h | head -n1')

def set_options(opt):
    opt.tool_options('compiler_cxx')

def configure(conf):
    conf.check_tool('compiler_cxx')

    
    cxx0x = conf.check_cxx(fragment="""
                template <typename... Args> void func(Args const&...) {}
    
                int main() { func(1,2,3,4,5); }
                """,
                cxxflags=['--std=c++0x'],
                msg='Checking for variadic templates',
                mandatory=False,
                )
    if cxx0x:
        conf.env['CXXFLAGS_CPP0X'] = ['--std=c++0x',
                                      '-DHAS_VARIADIC_TEMPLATES']


    # Check for ROOT
    rc = conf.find_program('root-config')
    get = lambda name: \
            Utils.cmd_output("%s --%s" % (rc, name)).strip().split()
    conf.env['CXXFLAGS_ROOT'] = get('auxcflags')
    conf.env['LIBPATH_ROOT'] = get('libdir')
    conf.env['CPPPATH_ROOT'] = get('incdir')
    conf.env['LINKFLAGS_ROOT'] = get('libs')
    conf.env['LIB_ROOT'] = ['TreePlayer']

    env = conf.env.copy()
    env.append_unique('CXXFLAGS', ['-O0', '-g3'])
    conf.env.append_unique('CXXFLAGS', ['-O2', '-DNDEBUG'])

    env.set_variant('debug')
    conf.set_env_name('debug', env)

def build(bld):
    task = bld.new_task_gen()
    task.features = 'cxx cprogram'

    task.source = glob('*.cpp')
    task.target = APPNAME
    task.uselib = "ROOT CPP0X"

    for obj in [] + bld.all_task_gen:
        obj.clone('debug')

